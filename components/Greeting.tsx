import React from "react";
import styled, { css } from "styled-components";
import avatar from "../shared/avatar.jpeg";
import {
  ColorDarkGray01,
  ColorDarkGreen,
  ColorDarkPrimary,
  ColorGray01,
  ColorPrimary,
  ColorYellow,
} from "../shared/styleTokens";
import { useThemeContext } from "./ThemeProvider";

const StyledAvatarImage = styled.div`
  width: 139px;
  height: 139px;
  border-radius: 10%;
  background-image: url(${avatar as any});
  background-size: cover;
  filter: drop-shadow(2px 2px 1px rgba(120, 135, 156, 0.25));
`;

const StyledContent = styled.div`
  display: flex;
  flex-direction: column;
  gap: 4px;
`;

const StyledHiThere = styled.span`
  font-family: "Inter";
  font-style: normal;
  font-weight: 400;
  font-size: 20px;
  line-height: 24px;
`;

const StyledH1 = styled.h1`
  font-family: "Inter";
  font-style: normal;
  font-weight: 600;
  font-size: 48px;
  line-height: 58px;
  margin: 0;
`;

const StyledP = styled.p`
  font-family: "Inter";
  font-style: normal;
  font-weight: 400;
  font-size: 18px;
  line-height: 22px;
  margin: 0;
  width: 720px;
`;

const ThemeLight = css`
  ${StyledHiThere} {
    color: ${ColorDarkGreen};
  }

  ${StyledH1} {
    color: ${ColorPrimary};
  }

  ${StyledP} {
    color: ${ColorGray01};
  }
`;

const ThemeDark = css`
  ${StyledHiThere} {
    color: ${ColorYellow};
  }

  ${StyledH1} {
    color: ${ColorDarkPrimary};
  }

  ${StyledP} {
    color: ${ColorDarkGray01};
  }
`;

const setTheme = ({ isDark }: { isDark: boolean }) => {
  return isDark ? ThemeDark : ThemeLight;
};

const StyledWrapper = styled.div`
  display: flex;
  flex-direction: row;
  gap: 16px;

  ${setTheme}
`;

const WaveEmoji = ({ isDark }: { isDark?: boolean }) => (
  <svg
    width="20"
    height="20"
    viewBox="0 0 20 20"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path
      d="M16.7299 7.62999L16.6649 9.25999L11.0549 3.64499C10.8362 3.41359 10.5399 3.27089 10.2226 3.24414C9.90534 3.21739 9.58932 3.30848 9.33494 3.49999C9.19914 3.60993 9.08799 3.74722 9.00874 3.90294C8.92949 4.05865 8.8839 4.22931 8.87494 4.40381C8.86597 4.5783 8.89384 4.75273 8.95673 4.91575C9.01962 5.07876 9.11611 5.22672 9.23994 5.34999L8.44494 4.55499C8.20227 4.30234 7.87287 4.15104 7.5231 4.13155C7.17333 4.11207 6.82917 4.22586 6.55994 4.44999C6.4255 4.57127 6.31713 4.71863 6.24144 4.88311C6.16574 5.04759 6.12429 5.22575 6.11961 5.40676C6.11494 5.58776 6.14713 5.76782 6.21423 5.93599C6.28133 6.10416 6.38194 6.25693 6.50994 6.38499L6.49994 6.35999C6.30842 6.16459 6.05871 6.03655 5.78826 5.99509C5.51781 5.95362 5.24121 6.00095 4.99994 6.12999C4.83282 6.22521 4.68994 6.35771 4.5824 6.51718C4.47486 6.67665 4.40557 6.85879 4.37993 7.04941C4.35429 7.24003 4.37298 7.434 4.43456 7.61622C4.49613 7.79844 4.59893 7.96399 4.73494 8.09999L6.23494 9.59999C6.12684 9.49205 5.99736 9.40793 5.85481 9.35302C5.71226 9.29811 5.55979 9.27364 5.40722 9.28117C5.25465 9.28871 5.10534 9.32808 4.96889 9.39677C4.83244 9.46545 4.71188 9.56193 4.61494 9.67999C4.44935 9.90194 4.37021 10.1766 4.39229 10.4526C4.41437 10.7286 4.53617 10.9872 4.73494 11.18L10.9999 17.5C11.4387 17.9408 11.9607 18.2901 12.5356 18.5275C13.1104 18.7649 13.7268 18.8857 14.3487 18.8829C14.9707 18.8801 15.5859 18.7538 16.1586 18.5112C16.7313 18.2687 17.2502 17.9147 17.6849 17.47C18.3708 16.7542 18.9023 15.905 19.2463 14.9752C19.5904 14.0454 19.7397 13.0549 19.6849 12.065L19.4999 5.99999C19.4898 5.86381 19.4285 5.73653 19.3283 5.64376C19.2281 5.55098 19.0965 5.49961 18.9599 5.49999V5.49999C18.3851 5.49817 17.8318 5.71893 17.4161 6.116C17.0004 6.51307 16.7545 7.05564 16.7299 7.62999V7.62999Z"
      fill="#FFE500"
    />
    <path
      d="M16.665 9.25999L11.055 3.64499C10.8362 3.41359 10.5399 3.27089 10.2226 3.24414C9.90536 3.21739 9.58934 3.30848 9.33496 3.49999C9.20852 3.60271 9.10355 3.72935 9.02606 3.87266C8.94858 4.01596 8.90009 4.17314 8.88338 4.33519C8.86666 4.49725 8.88204 4.66101 8.92864 4.81711C8.97524 4.97322 9.05215 5.11862 9.15496 5.24499C9.20576 5.17499 9.26639 5.11269 9.33496 5.05999C9.58816 4.86723 9.90347 4.77445 10.2207 4.79935C10.538 4.82425 10.8349 4.96509 11.055 5.19499L15.885 10.03L16.665 9.25999Z"
      fill="#FFF48C"
    />
    <path
      d="M19.5449 7.56L19.4999 6C19.4898 5.86383 19.4285 5.73654 19.3283 5.64377C19.2281 5.551 19.0965 5.49963 18.9599 5.5C18.3834 5.49963 17.8293 5.72304 17.4142 6.12316C16.9992 6.52328 16.7557 7.06887 16.7349 7.645L16.6699 9.275L16.7349 9.205C16.7569 8.62929 17.0008 8.08442 17.4156 7.68455C17.8304 7.28469 18.3838 7.06088 18.9599 7.06C19.1014 7.0585 19.2386 7.10833 19.3462 7.20027C19.4538 7.2922 19.5244 7.42001 19.5449 7.56Z"
      fill="#FFF48C"
    />
    <path
      d="M16.7299 7.62999L16.6649 9.25999L11.0549 3.64499C10.8362 3.41359 10.5399 3.27089 10.2226 3.24414C9.90534 3.21739 9.58932 3.30848 9.33494 3.49999C9.19914 3.60993 9.08799 3.74722 9.00874 3.90294C8.92949 4.05865 8.8839 4.22931 8.87494 4.40381C8.86597 4.5783 8.89384 4.75273 8.95673 4.91575C9.01962 5.07876 9.11611 5.22672 9.23994 5.34999L8.44494 4.55499C8.20227 4.30234 7.87287 4.15104 7.5231 4.13155C7.17333 4.11207 6.82917 4.22586 6.55994 4.44999C6.4255 4.57127 6.31713 4.71863 6.24144 4.88311C6.16574 5.04759 6.12429 5.22575 6.11961 5.40676C6.11494 5.58776 6.14713 5.76782 6.21423 5.93599C6.28133 6.10416 6.38194 6.25693 6.50994 6.38499L6.49994 6.35999C6.30842 6.16459 6.05871 6.03655 5.78826 5.99509C5.51781 5.95362 5.24121 6.00095 4.99994 6.12999C4.83282 6.22521 4.68994 6.35771 4.5824 6.51718C4.47486 6.67665 4.40557 6.85879 4.37993 7.04941C4.35429 7.24003 4.37298 7.434 4.43456 7.61622C4.49613 7.79844 4.59893 7.96399 4.73494 8.09999L6.23494 9.59999C6.12684 9.49205 5.99736 9.40793 5.85481 9.35302C5.71226 9.29811 5.55979 9.27364 5.40722 9.28117C5.25465 9.28871 5.10534 9.32808 4.96889 9.39677C4.83244 9.46545 4.71188 9.56193 4.61494 9.67999C4.44935 9.90194 4.37021 10.1766 4.39229 10.4526C4.41437 10.7286 4.53617 10.9872 4.73494 11.18L10.9999 17.5C11.4387 17.9408 11.9607 18.2901 12.5356 18.5275C13.1104 18.7649 13.7268 18.8857 14.3487 18.8829C14.9707 18.8801 15.5859 18.7538 16.1586 18.5112C16.7313 18.2687 17.2502 17.9147 17.6849 17.47C18.3708 16.7542 18.9023 15.905 19.2463 14.9752C19.5904 14.0454 19.7397 13.0549 19.6849 12.065L19.4999 5.99999C19.4898 5.86381 19.4285 5.73653 19.3283 5.64376C19.2281 5.55098 19.0965 5.49961 18.9599 5.49999V5.49999C18.3851 5.49817 17.8318 5.71893 17.4161 6.116C17.0004 6.51307 16.7545 7.05564 16.7299 7.62999V7.62999Z"
      stroke="#45413c"
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M6.16992 9.58997L9.19992 12.615"
      stroke="#45413c"
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M6.51001 6.38995L10.965 10.845"
      stroke="#45413c"
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M9.23999 5.35999L12.845 8.96999"
      stroke="#45413c"
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M16.665 9.26001L14.88 11.045C14.6011 11.3236 14.3798 11.6545 14.2288 12.0187C14.0778 12.3829 14.0001 12.7733 14.0001 13.1675C14.0001 13.5618 14.0778 13.9521 14.2288 14.3163C14.3798 14.6805 14.6011 15.0114 14.88 15.29V15.29"
      stroke="#45413c"
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M12.0549 2.38C12.8494 2.51569 13.5934 2.86089 14.2099 3.38C14.8209 3.92258 15.2852 4.61045 15.5599 5.38"
      stroke={isDark ? "#fff" : "#45413c"}
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M12.34 1.04498C13.3191 1.20251 14.2378 1.62043 15 2.25498C15.7557 2.92155 16.3288 3.77 16.665 4.71998"
      stroke={isDark ? "#fff" : "#45413c"}
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M2.325 10.12C2.24583 10.9196 2.38222 11.7259 2.72 12.455C3.08632 13.1843 3.63166 13.8088 4.305 14.27"
      stroke={isDark ? "#fff" : "#45413c"}
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
    <path
      d="M0.959978 10.05C0.864652 11.0391 1.03736 12.0356 1.45998 12.935C1.91271 13.8357 2.58507 14.6078 3.41498 15.18"
      stroke={isDark ? "#fff" : "#45413c"}
      strokeWidth="0.5"
      strokeLinecap="round"
      strokeLinejoin="round"
    />
  </svg>
);

export const Greeting: React.FC = () => {
  const { isDark } = useThemeContext();
  return (
    <StyledWrapper isDark={isDark}>
      <StyledAvatarImage />
      <StyledContent>
        <StyledHiThere>
          <WaveEmoji isDark={isDark} /> Hi there!
        </StyledHiThere>
        <StyledH1>Iâ€™m Diullei Gomes</StyledH1>
        <StyledP>
          I'm a FullStack Web Developer who loves writing code. In this space I
          share a little of what I learned, I hope you like it and find
          something useful here :)
        </StyledP>
      </StyledContent>
    </StyledWrapper>
  );
};
